# 

name: Build Container Image to Docker HUB
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'
      - 'LICENSE'
      - 'runlog.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'
      - 'LICENSE'
      - 'runlog.md'

jobs:
  build:
    name: Build and push container image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository as working directory
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set vars
        id: vars
        run: |
          # Abort Github action if repository not startswith image-
          echo ${{ github.event.repository.name }} | grep -qE '^image-'

          # Get image name from repository name
          DOCKER_REPO=$( echo ${{ github.event.repository.name }} | cut -f2- -d-)
          echo "::set-output name=repo::${DOCKER_REPO}"

          # Get TAG on format expected by Flux for get latest from correct sorting
          SHORT_SHA=$(git log --format="%H" -n 1 | cut -c1-7)
          TAG=$(date -u +${SHORT_SHA}-%Y%m%dT%H%M)
          echo "::set-output name=tag::${TAG}"
 
      - name: Docker build and push
        uses: docker/build-push-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          push: true
          tags: webera/${{ steps.vars.outputs.repo }}:latest,webera/${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.tag }}
